{"version":3,"sources":["component/weatherCard.js","component/temper.js","App.js","index.js"],"names":["WeatherCard","tempInfo","useState","weatherState","setWeatherState","temp","humidity","pressure","weatherMood","name","speed","country","sunrise","sunset","useEffect","curTime","Date","getHours","date","sunrDate","timeStr","getMinutes","className","toLocaleString","Temper","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","document","title","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e384c24f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst WeatherCard = ({tempInfo}) => {\r\n\r\n    const [weatherState, setWeatherState] = useState(\"\");\r\n\r\n    const  {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weatherMood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunrise,\r\n        sunset,\r\n    } = tempInfo;\r\n\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const curTime = new Date();\r\n        if(weatherMood){\r\n            switch (weatherMood) {\r\n                    \r\n                case \"Clouds\": \r\n                    (curTime.getHours() > date.getHours() && curTime.getHours() < sunrDate.getHours()) ? setWeatherState(\"wi-night-cloudy\") : setWeatherState(\"wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\": \r\n                    (curTime.getHours() > date.getHours() && curTime.getHours() < sunrDate.getHours()) ? setWeatherState(\"wi-night-fog\") : setWeatherState(\"wi-day-cloudy\");            \r\n                    break;\r\n                case \"Clear\": \r\n                    (curTime.getHours() > date.getHours() && curTime.getHours() < sunrDate.getHours()) ? setWeatherState(\"wi-night-clear\") : setWeatherState(\"wi-day-cloudy\");                        \r\n                    break;\r\n                case \"Mist\": \r\n                    (curTime.getHours() > date.getHours() && curTime.getHours() < sunrDate.getHours()) ? setWeatherState(setWeatherState(\"wi-night-cloudy-windy\")) : setWeatherState(\"wi-day-cloudy\");                \r\n                    break;\r\n                case \"Rain\": \r\n                    (curTime.getHours() > date.getHours() && curTime.getHours() < sunrDate.getHours()) ? setWeatherState(setWeatherState(\"wi-night-rain\")) : setWeatherState(\"wi-day-rain\");  \r\n                    break;\r\n                default:\r\n                    setWeatherState(\"wi-stars\");\r\n                    break;\r\n            }\r\n        }\r\n            \r\n    }, [weatherMood]);\r\n\r\n    let sec= sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n    let sunr = sunrise;\r\n    \r\n    let sunrDate= new Date(sunr * 1000);\r\n    // console.log(sunrDate)\r\n\r\n    return (\r\n        <>\r\n        <article className=\"widget\">\r\n            <div className=\"weatherIcon\">\r\n                <i className={`wi ${weatherState}`}></i>\r\n            </div>\r\n            <div className=\"weatherInfo\">\r\n                <div className=\"temperature\">\r\n                    <span>{ temp }&deg;</span>\r\n                </div>\r\n                <div className=\"description\">\r\n                    <div className=\"weatherCondition\">\r\n                        { weatherMood }\r\n                    </div>\r\n                    <div className=\"place\">\r\n                        {name}, {country}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n            <div className=\"extra-temp\">\r\n                <div className=\"temp-info-minmax\">\r\n                    <div className=\"two-sided-section\">\r\n                        <p><i className={\"wi wi-sunset\"}></i></p>\r\n                        <p className=\"extra-info-leftside\"> {timeStr} PM<br /> sunset </p>\r\n                    </div>\r\n                    <div className=\"two-sided-section\">\r\n                        <p><i className={\"wi wi-humidity\"}></i></p>\r\n                        <p className=\"extra-info-leftside\"> {humidity} <br /> Humidity</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"weather-extra-info\">\r\n                    <div className=\"two-sided-section\">\r\n                        <p><i className={\"wi wi-rain\"}></i></p>\r\n                        <p className=\"extra-info-leftside\"> {pressure} <br /> pressure</p>\r\n                    </div>\r\n                    <div className=\"two-sided-section\">\r\n                        <p><i className={\"wi wi-strong-wind\"}></i></p>\r\n                        <p className=\"extra-info-leftside\"> {speed} <br /> speed</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport WeatherCard from './weatherCard';\r\n\r\nconst Temper = () => {\r\n\r\n    const [searchValue,setSearchValue] = useState(\"Ranaghat\");\r\n    const [tempInfo, setTempInfo] = useState({});\r\n\r\n    const getWeatherInfo = async () =>{\r\n        try{\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=93810d7614bc26803c9e049f7236182d`;\r\n\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n\r\n            const {temp,humidity,pressure} = data.main;\r\n            const {main: weatherMood} = data.weather[0];\r\n            const {name} = data;\r\n            const{speed} = data.wind;\r\n            const { country, sunset, sunrise} = data.sys;\r\n            // console.log(sunrise)\r\n\r\n            const myNewWatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weatherMood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunrise,\r\n                sunset,\r\n            };\r\n            setTempInfo(myNewWatherInfo);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.title= `Expert Weather | ${searchValue}`;\r\n    }, [searchValue])\r\n\r\n    useEffect (\r\n        () =>{\r\n            getWeatherInfo();\r\n        },[]\r\n    );\r\n\r\n    return (\r\n        <>\r\n        <div className=\"wrap\">\r\n            <div className=\"search\">\r\n                <input type=\"search\" placeholder=\"search ...\" autoFocus id=\"search\" value={ searchValue } onChange={ (e) => setSearchValue(e.target.value) } className=\"searchTerm\" />\r\n                <button  className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>\r\n                    Search üîç\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <WeatherCard tempInfo={tempInfo}/>\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\nexport default Temper;\r\n","import React from 'react';\nimport Temper from './component/temper';\n\nfunction App() {\n  return (\n    <>\n      <Temper />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}